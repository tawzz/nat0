<Application x:Class="ations.App" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="clr-namespace:ations" StartupUri="NA/Window1.xaml">
  <Application.Resources>
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <local:BooleanToOpacityConverter x:Key="BooleanToOpacityConverter" />
    <local:BooleanToCursorConverter x:Key="BooleanToCursorConverter" />
    <local:ReverseBooleanToVisibilityConverter x:Key="ReverseBooleanToVisibilityConverter" />
    <local:IndexToPositionConverter x:Key="IndexToPositionConverter" />
    <local:ItemContainerToZIndexConverter x:Key="ItemContainerToZIndexConverter" />

    <ItemsPanelTemplate x:Key="UGrid1">
      <UniformGrid Rows="1" />
    </ItemsPanelTemplate>
    <ItemsPanelTemplate x:Key="UGrid2">
      <UniformGrid />
    </ItemsPanelTemplate>
    <ItemsPanelTemplate x:Key="CanvasPanel">
      <Canvas />
    </ItemsPanelTemplate>
    <ItemsPanelTemplate x:Key="GridPanel">
      <Grid />
    </ItemsPanelTemplate>

    <DataTemplate x:Key="DTResource">
      <Image Source="{Binding Path}" Opacity="1" Height="90" Width="104" Margin="0,2" />
    </DataTemplate>

    <ControlTemplate x:Key="SelectedTemplate" TargetType="ListViewItem">
      <Border Tag="{Binding Value}" Cursor="Hand" Background="Yellow">
        <Image Source="{Binding Path}" Opacity="1" Height="90" Width="104" Margin="0,2" />
        <!--<TextBlock Text="{Binding Name}" Margin="5" />-->
      </Border>
    </ControlTemplate>
    <!-- same as -->
    <ControlTemplate x:Key="CTSelectResource" TargetType="ListViewItem">
      <Grid>
        <Ellipse Fill="Sienna" />
        <Image Source="{Binding Path}" Height="90" Width="104" Margin="0,2" />
      </Grid>
    </ControlTemplate>

    <Style TargetType="ListViewItem" x:Key="Style1">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ListViewItem">
            <Border Tag="{Binding Value}" Cursor="Hand" Background="Transparent">
              <Image Source="{Binding Path}" Opacity="1" Height="90" Width="104" Margin="0,2" />
              <!--<TextBlock Text="{Binding Name}" Margin="5" />-->
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Style.Triggers>
        <MultiTrigger>
          <MultiTrigger.Conditions>
            <Condition Property="IsSelected" Value="true" />
            <Condition Property="Selector.IsSelectionActive" Value="true" />
          </MultiTrigger.Conditions>
          <Setter Property="Template" Value="{StaticResource SelectedTemplate}" />
        </MultiTrigger>
      </Style.Triggers>
    </Style>
    <Style x:Key="FocusVisual">
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate>
            <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                StrokeThickness="1" StrokeDashArray="1 2" />
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD" />
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070" />
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD" />
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1" />
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6" />
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B" />
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />
    <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
      <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
      <Setter Property="Background" Value="#B0000000" />
      <Setter Property="BorderBrush" Value="Transparent" />
      <Setter Property="Foreground" Value="White" />
      <Setter Property="BorderThickness" Value="0" />
      <Setter Property="HorizontalContentAlignment" Value="Center" />
      <Setter Property="VerticalContentAlignment" Value="Center" />
      <Setter Property="Padding" Value="20,2" />
      <Setter Property="FontSize" Value="24" />
      <Setter Property="Height" Value="60" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="8">
              <ContentPresenter x:Name="contentPresenter" Focusable="False"
                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"
                  RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="IsDefaulted" Value="true">
              </Trigger>
              <Trigger Property="IsMouseOver" Value="true">
                <!--<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#F0FF0000" />-->
                <Setter Property="FontSize" Value="32" />
                <Setter Property="FontWeight" Value="Bold" />
              </Trigger>
              <Trigger Property="IsPressed" Value="true">
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="Red" />
                <Setter Property="FontSize" Value="32" />
                <Setter Property="FontWeight" Value="Bold" />
              </Trigger>
              <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="border" Value="Transparent" />
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#09ffffff" />
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <Style x:Key="CivCardStyle" TargetType="{x:Type Button}">
      <Setter Property="HorizontalAlignment" Value="Left" />
      <Setter Property="VerticalAlignment" Value="Top" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Grid x:Name="border" Background="Transparent" SnapsToDevicePixels="true">
              <ContentPresenter x:Name="contentPresenter" Focusable="False"
                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"
                  RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
              <Border x:Name="frameNormal" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="11" 
                      CornerRadius="12" />
              <!--<Border x:Name="frameMarked" BorderBrush="09FFFF00" BorderThickness="12"
                  CornerRadius="12" />-->
              <Border x:Name="frameSelected" BorderBrush="#09FFFF00" BorderThickness="13" CornerRadius="12" Visibility="Collapsed" />
              <Border x:Name="disabledBorder" Background="#04000000" Visibility="Collapsed" />
            </Grid>
            <ControlTemplate.Triggers>
              <!--<Trigger Property="IsDefaulted" Value="true">
              </Trigger>-->
              <Trigger Property="IsEnabled" Value="true">
                <Setter Property="Visibility" TargetName="frameSelected" Value="Visible" />
                <Setter Property="Cursor" Value="Hand" />
              </Trigger>
              <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Visibility" TargetName="disabledBorder" Value="Visible" />
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <!-- example von http://stackoverflow.com/questions/14838524/how-to-set-a-wpf-listview-selected-item-color -->
    <!--<ControlTemplate x:Key="SelectedTemplate" TargetType="ListViewItem">
      <Border CornerRadius="5" BorderThickness="1" BorderBrush="DarkGray" Background="Yellow" Padding="2" HorizontalAlignment="Left"
          Margin="5" Tag="{Binding Value}" Cursor="Hand" MouseUp="Border_MouseUp_1">
        <TextBlock Text="{Binding Name}" Margin="5" />
      </Border>
    </ControlTemplate>
    <Style TargetType="ListViewItem">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ListViewItem">
            <Border CornerRadius="5" BorderThickness="1" BorderBrush="DarkGray" Background="WhiteSmoke" Padding="2"
                HorizontalAlignment="Left" Margin="5" Tag="{Binding Value}" Cursor="Hand" MouseUp="Border_MouseUp_1">
              <TextBlock Text="{Binding Name}" Margin="5" />
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Style.Triggers>
        <MultiTrigger>
          <MultiTrigger.Conditions>
            <Condition Property="IsSelected" Value="true" />
            <Condition Property="Selector.IsSelectionActive" Value="true" />
          </MultiTrigger.Conditions>
          <Setter Property="Template" Value="{StaticResource SelectedTemplate}" />
        </MultiTrigger>
      </Style.Triggers>
    </Style>-->
    <!--<x:Array x:Key="poposarr" Type="Thickness">
      <Thickness>55,5,0,0</Thickness>
      <Thickness>55,25,0,0</Thickness>
      <Thickness>55,45,0,0</Thickness>
      <Thickness>55,65,0,0</Thickness>
      <Thickness>55,85,0,0</Thickness>
    </x:Array>-->

  </Application.Resources>
</Application>
